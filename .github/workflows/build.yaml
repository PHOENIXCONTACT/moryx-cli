name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
on:
  push:
    branches: 
      - main
      - future
    tags:
      - v[0-9]+.[0-9]+.[0-9]+ # Matches all semantic versioning tags with major, minor, patch
  pull_request:
    branches: 
      - dev
      - future

env:
  dotnet_sdk_version: '8.0.100-preview.5.23303.2'
  REPOSITORY_NAME: ${{ github.event.repository.name }}
  MORYX_PACKAGE_TARGET_RELEASE: 'https://api.nuget.org/v3/index.json'
  MORYX_PACKAGE_TARGET_V3_RELEASE: 'https://api.nuget.org/v3/index.json'

jobs:
  SetupEnvironment:
    runs-on: ubuntu-latest
    steps:
      - run: echo ""
    outputs:
      dotnet_sdk_version: ${{ env.dotnet_sdk_version }}
      REPOSITORY_NAME: ${{ env.REPOSITORY_NAME }}
      MORYX_PACKAGE_TARGET: ${{ env.MORYX_PACKAGE_TARGET_RELEASE }}
      MORYX_PACKAGE_TARGET_V3: ${{ env.MORYX_PACKAGE_TARGET_V3_RELEASE }}

  Build:
    needs: [SetupEnvironment]
    uses: moryx-industry/tools/.github/workflows/build-tool.yml@main
    with:
      dotnet_sdk_version: ${{ needs.SetupEnvironment.outputs.dotnet_sdk_version }}
      REPOSITORY_NAME: ${{ needs.SetupEnvironment.outputs.REPOSITORY_NAME }}
      SETUP_NODE: false

  # UnitTests:
  #   needs: [SetupEnvironment, Build]
  #   uses: moryx-industry/tools/.github/workflows/unittest-tool.yml@main
  #   with:
  #     dotnet_sdk_version: ${{ needs.SetupEnvironment.outputs.dotnet_sdk_version }}
  #     REPOSITORY_NAME: ${{ needs.SetupEnvironment.outputs.REPOSITORY_NAME }}

  Publish:
    needs: [SetupEnvironment, Build]
    uses: moryx-industry/tools/.github/workflows/publish-tool.yml@main
    with:
      dotnet_sdk_version: ${{ needs.SetupEnvironment.outputs.dotnet_sdk_version }}
      REPOSITORY_NAME: ${{ needs.SetupEnvironment.outputs.REPOSITORY_NAME }}
      MORYX_PACKAGE_TARGET: ${{ needs.SetupEnvironment.outputs.MORYX_PACKAGE_TARGET }}
      MORYX_PACKAGE_TARGET_V3: ${{ needs.SetupEnvironment.outputs.MORYX_PACKAGE_TARGET_V3 }}
    secrets: 
      MYGET_TOKEN: ${{secrets.MYGET_TOKEN}}
      NUGET_TOKEN: ${{secrets.NUGET_TOKEN}}